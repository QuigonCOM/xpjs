"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LEDGER_CANISTER = exports.init = void 0;
exports.default = ({ IDL }) => {
    const AccountIdentifier = IDL.Text;
    const ICPTs = IDL.Record({ e8s: IDL.Nat64 });
    const AccountBalanceArgs = IDL.Record({ account: AccountIdentifier });
    const SubAccount = IDL.Vec(IDL.Nat8);
    const BlockHeight = IDL.Nat64;
    const NotifyCanisterArgs = IDL.Record({
        to_subaccount: IDL.Opt(SubAccount),
        from_subaccount: IDL.Opt(SubAccount),
        to_canister: IDL.Principal,
        max_fee: ICPTs,
        block_height: BlockHeight,
    });
    const Memo = IDL.Nat64;
    const TimeStamp = IDL.Record({ timestamp_nanos: IDL.Nat64 });
    const SendArgs = IDL.Record({
        to: AccountIdentifier,
        fee: ICPTs,
        memo: Memo,
        from_subaccount: IDL.Opt(SubAccount),
        created_at_time: IDL.Opt(TimeStamp),
        amount: ICPTs,
    });
    return IDL.Service({
        account_balance_dfx: IDL.Func([AccountBalanceArgs], [ICPTs], ["query"]),
        notify_dfx: IDL.Func([NotifyCanisterArgs], [], []),
        send_dfx: IDL.Func([SendArgs], [BlockHeight], []),
    });
};
const init = ({ IDL }) => {
    const AccountIdentifier = IDL.Text;
    const Duration = IDL.Record({ secs: IDL.Nat64, nanos: IDL.Nat32 });
    const ArchiveOptions = IDL.Record({
        max_message_size_bytes: IDL.Opt(IDL.Nat32),
        node_max_memory_size_bytes: IDL.Opt(IDL.Nat32),
        controller_id: IDL.Principal,
    });
    const ICPTs = IDL.Record({ e8s: IDL.Nat64 });
    const LedgerCanisterInitPayload = IDL.Record({
        send_whitelist: IDL.Vec(IDL.Tuple(IDL.Principal)),
        minting_account: AccountIdentifier,
        transaction_window: IDL.Opt(Duration),
        max_message_size_bytes: IDL.Opt(IDL.Nat32),
        archive_options: IDL.Opt(ArchiveOptions),
        initial_values: IDL.Vec(IDL.Tuple(AccountIdentifier, ICPTs)),
    });
    return [LedgerCanisterInitPayload];
};
exports.init = init;
exports.LEDGER_CANISTER = "ryjl3-tyaaa-aaaaa-aaaba-cai";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVkZ2VyLmRpZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oZWxwZXJzL2RmaW5pdHkvbGVkZ2VyLmRpZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrQkFBZSxDQUFDLEVBQUUsR0FBRyxFQUFPLEVBQUUsRUFBRTtJQUM5QixNQUFNLGlCQUFpQixHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7SUFFbkMsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUU3QyxNQUFNLGtCQUFrQixHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO0lBQ3RFLE1BQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLE1BQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7SUFDOUIsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQ3BDLGFBQWEsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQztRQUNsQyxlQUFlLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUM7UUFDcEMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxTQUFTO1FBQzFCLE9BQU8sRUFBRSxLQUFLO1FBQ2QsWUFBWSxFQUFFLFdBQVc7S0FDMUIsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztJQUN2QixNQUFNLFNBQVMsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsZUFBZSxFQUFFLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQzdELE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7UUFDMUIsRUFBRSxFQUFFLGlCQUFpQjtRQUNyQixHQUFHLEVBQUUsS0FBSztRQUNWLElBQUksRUFBRSxJQUFJO1FBQ1YsZUFBZSxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDO1FBQ3BDLGVBQWUsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztRQUNuQyxNQUFNLEVBQUUsS0FBSztLQUNkLENBQUMsQ0FBQztJQUNILE9BQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQztRQUNqQixtQkFBbUIsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdkUsVUFBVSxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7UUFDbEQsUUFBUSxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFFLEVBQUUsQ0FBQztLQUNsRCxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFDSyxNQUFNLElBQUksR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFPLEVBQUUsRUFBRTtJQUNuQyxNQUFNLGlCQUFpQixHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7SUFDbkMsTUFBTSxRQUFRLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUNuRSxNQUFNLGNBQWMsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQ2hDLHNCQUFzQixFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztRQUMxQywwQkFBMEIsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUM7UUFDOUMsYUFBYSxFQUFFLEdBQUcsQ0FBQyxTQUFTO0tBQzdCLENBQUMsQ0FBQztJQUNILE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDN0MsTUFBTSx5QkFBeUIsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQzNDLGNBQWMsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2pELGVBQWUsRUFBRSxpQkFBaUI7UUFDbEMsa0JBQWtCLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUM7UUFDckMsc0JBQXNCLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQzFDLGVBQWUsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztRQUN4QyxjQUFjLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQzdELENBQUMsQ0FBQztJQUNILE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBQ3JDLENBQUMsQ0FBQztBQWxCVyxRQUFBLElBQUksUUFrQmY7QUFFVyxRQUFBLGVBQWUsR0FBRyw2QkFBNkIsQ0FBQyJ9